"use strict";(self.webpackChunkbenchmarking=self.webpackChunkbenchmarking||[]).push([[403],{4458:(I,h,t)=>{t.r(h),t.d(h,{ForkJoinTestComponent:()=>D});var S=t(7579),T=t(9646),f=t(1005),k=t(8505),v=t(9751),b=t(4742),g=t(8421),J=t(3269),$=t(5403),y=t(3268),C=t(1810),O=t(1028),Z=t(1323),A=t(6895),e=t(4650);console.log("loaded ForkJoinTestComponent");let D=(()=>{class o{constructor(){this.codeSnippet="\n  forkJoinStream$ = forkJoin([\n    this.makeStream(1),\n    this.makeStream(2),\n    this.makeStream(3),\n    this.makeStream(4),\n    this.makeStream(5),\n    this.makeStream(6),\n    this.makeStream(7)\n  ])\n  ",this.emitStream$=new S.x,this.runStream$=new S.x,this.subscribeStartTime=Date.now(),this.endTime=Number.NEGATIVE_INFINITY,this.makeStream=n=>(0,T.of)(n).pipe((0,f.g)(1e3*Math.random()+1e3),(0,k.b)(()=>this.runStream$.next({label:`${n}`,time:Date.now()}))),this.forkJoinStream$=function F(...o){const s=(0,J.jO)(o),{args:n,keys:a}=(0,b.D)(o),l=new v.y(i=>{const{length:r}=n;if(!r)return void i.complete();const p=new Array(r);let d=r,u=r;for(let m=0;m<r;m++){let c=!1;(0,g.Xf)(n[m]).subscribe((0,$.x)(i,j=>{c||(c=!0,u--),p[m]=j},()=>d--,void 0,()=>{(!d||!c)&&(u||i.next(a?(0,C.n)(a,p):p),i.complete())}))}});return s?l.pipe((0,y.Z)(s)):l}([this.makeStream(1),this.makeStream(2),this.makeStream(3),this.makeStream(4),this.makeStream(5),this.makeStream(6),this.makeStream(7)])}ngOnInit(){}doSubscribe(){this.subscribeStartTime=Date.now(),this.forkJoinStream$.subscribe({next:n=>{this.emitStream$.next({label:`${n}`,time:Date.now()})},complete:()=>{this.endTime=Date.now(),this.emitStream$.complete(),this.runStream$.complete()}})}}return o.\u0275fac=function(n){return new(n||o)},o.\u0275cmp=e.Xpm({type:o,selectors:[["app-fork-join-test"]],standalone:!0,features:[e.jDz],decls:10,vars:7,consts:[[3,"codeSnippet"],[3,"click"],[1,"observable_area"],["title","Emits",3,"endTime","startTime","stream$"],["title","Runs",3,"endTime","startTime","stream$"]],template:function(n,a){1&n&&(e._UZ(0,"app-code-snippet",0),e.TgZ(1,"button",1),e.NdJ("click",function(){return a.doSubscribe()}),e._uU(2,"Do subscribe"),e.qZA(),e.TgZ(3,"div",2)(4,"p"),e._uU(5,"forkJoin will spin up all streams in parallel and then emit once as an array (which is in same order as original array)"),e.qZA(),e.TgZ(6,"p"),e._uU(7,"Good to quickly complete all streams in parallel and emit once (load all at once)"),e.qZA(),e._UZ(8,"app-observable-graph",3)(9,"app-observable-graph",4),e.qZA()),2&n&&(e.Q6J("codeSnippet",a.codeSnippet),e.xp6(8),e.Q6J("endTime",a.endTime)("startTime",a.subscribeStartTime)("stream$",a.emitStream$),e.xp6(1),e.Q6J("endTime",a.endTime)("startTime",a.subscribeStartTime)("stream$",a.runStream$))},dependencies:[O.N,Z.H,A.ez],styles:[".observable_area[_ngcontent-%COMP%]{max-width:400px}"]}),o})()}}]);