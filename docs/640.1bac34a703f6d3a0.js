"use strict";(self.webpackChunkbenchmarking=self.webpackChunkbenchmarking||[]).push([[640],{9429:(I,h,t)=>{t.r(h),t.d(h,{ForkJoinTestComponent:()=>D});var T=t(8306),f=t(4742),v=t(8421),b=t(3269),k=t(5403),g=t(3268),$=t(1810),S=t(7579),y=t(9646),C=t(1005),O=t(8505),Z=t(1028),A=t(1323),F=t(6895),e=t(4650);let D=(()=>{class s{constructor(){this.codeSnippet="\n  forkJoinStream$ = forkJoin([\n    this.makeStream(1),\n    this.makeStream(2),\n    this.makeStream(3),\n    this.makeStream(4),\n    this.makeStream(5),\n    this.makeStream(6),\n    this.makeStream(7)\n  ])\n  ",this.emitStream$=new S.x,this.runStream$=new S.x,this.subscribeStartTime=Date.now(),this.endTime=Number.NEGATIVE_INFINITY,this.makeStream=a=>(0,y.of)(a).pipe((0,C.g)(1e3*Math.random()+1e3),(0,O.b)(()=>this.runStream$.next({label:`${a}`,time:Date.now()}))),this.forkJoinStream$=function J(...s){const r=(0,b.jO)(s),{args:a,keys:n}=(0,f.D)(s),l=new T.y(i=>{const{length:o}=a;if(!o)return void i.complete();const p=new Array(o);let d=o,u=o;for(let m=0;m<o;m++){let c=!1;(0,v.Xf)(a[m]).subscribe((0,k.x)(i,j=>{c||(c=!0,u--),p[m]=j},()=>d--,void 0,()=>{(!d||!c)&&(u||i.next(n?(0,$.n)(n,p):p),i.complete())}))}});return r?l.pipe((0,g.Z)(r)):l}([this.makeStream(1),this.makeStream(2),this.makeStream(3),this.makeStream(4),this.makeStream(5),this.makeStream(6),this.makeStream(7)])}ngOnInit(){}doSubscribe(){this.subscribeStartTime=Date.now(),this.forkJoinStream$.subscribe({next:a=>{this.emitStream$.next({label:`${a}`,time:Date.now()})},complete:()=>{this.endTime=Date.now(),this.emitStream$.complete(),this.runStream$.complete()}})}}return s.\u0275fac=function(a){return new(a||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["app-fork-join-test"]],standalone:!0,features:[e.jDz],decls:10,vars:7,consts:[[3,"codeSnippet"],[3,"click"],[1,"observable_area"],["title","Emits",3,"endTime","startTime","stream$"],["title","Runs",3,"endTime","startTime","stream$"]],template:function(a,n){1&a&&(e._UZ(0,"app-code-snippet",0),e.TgZ(1,"button",1),e.NdJ("click",function(){return n.doSubscribe()}),e._uU(2,"Do subscribe"),e.qZA(),e.TgZ(3,"div",2)(4,"p"),e._uU(5,"forkJoin will spin up all streams in parallel and then emit once as an array (which is in same order as original array)"),e.qZA(),e.TgZ(6,"p"),e._uU(7,"Good to quickly complete all streams in parallel and emit once (load all at once)"),e.qZA(),e._UZ(8,"app-observable-graph",3)(9,"app-observable-graph",4),e.qZA()),2&a&&(e.Q6J("codeSnippet",n.codeSnippet),e.xp6(8),e.Q6J("endTime",n.endTime)("startTime",n.subscribeStartTime)("stream$",n.emitStream$),e.xp6(1),e.Q6J("endTime",n.endTime)("startTime",n.subscribeStartTime)("stream$",n.runStream$))},dependencies:[Z.N,A.H,F.ez],styles:[".observable_area[_ngcontent-%COMP%]{max-width:400px}"]}),s})()}}]);